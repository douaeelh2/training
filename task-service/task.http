GET http://localhost:7552/task-service/api/tasks

### 1. Create Task: Develop UI
POST http://localhost:7552/task-service/api/tasks
Content-Type: application/json

{
  "name": "Develop Task Management UI",
  "description": "Create a user-friendly UI for managing tasks.",
  "status": "In Progress",
  "technologies": [
    { "id": 1, "name": "React" },
    { "id": 2, "name": "Material-UI" }
  ]
}

###

### 2. Create Task: Implement Authentication
POST http://localhost:7552/task-service/api/tasks
Content-Type: application/json

{
  "name": "Implement Authentication",
  "description": "Add authentication and authorization features.",
  "status": "Pending",
  "technologies": [
    { "id": 3, "name": "Spring Security" },
    { "id": 4, "name": "JWT" }
  ]
}

###

### 3. Create Task: Optimize Database Queries
POST http://localhost:7552/task-service/api/tasks
Content-Type: application/json

{
  "name": "Optimize Database Queries",
  "description": "Improve query performance for task retrieval.",
  "status": "In Progress",
  "technologies": [
    { "id": 5, "name": "PostgreSQL" },
    { "id": 6, "name": "Hibernate" }
  ]
}


###
### 4. Create Task: Write API Documentation
POST http://localhost:7552/task-service/api/tasks
Content-Type: application/json

{
  "name": "Write API Documentation",
  "description": "Document all task-related API endpoints.",
  "status": "Pending",
  "technologies": [
    { "id": 7, "name": "Swagger" }
  ]
}


### 2. UPDATE Task
PUT http://localhost:7552/task-service/api/tasks
Content-Type: application/json

{
  "id": 1,
  "name": "Develop Task Management UI",
  "description": "Create a user-friendly UI for managing tasks.",
  "status": "Completed",
  "technologies": [
    { "id": 1, "name": "React" },
    { "id": 3, "name": "Node.js" }
  ]
}

###

### 3. DELETE Task by ID
DELETE http://localhost:7552/task-service/api/tasks/1

###

### 4. GET All Tasks
GET http://localhost:7552/task-service/api/tasks
Content-Type: application/json

###

### 5. SEARCH Tasks with Filter
POST http://localhost:7552/task-service/api/tasks/search
Content-Type: application/json

{
  "status": "In Progress",
  "technologies": [
    { "name": "React" }
  ]
}

###
GET http://localhost:7552/task-service/api/tasks/1

### 6. ASSIGN Employee to Task
POST http://localhost:7552/task-service/api/tasks/2/assign/2
Content-Type: application/json

###
